import React from"react";class JsonArray extends Array{constructor(e,t="",n){super(),"object"==typeof e&&(this.path=t,this._updateTree=()=>n({value:this}),this._updateArray(e))}static convertToJSON(e){return e.reduce((e,t)=>("object"===t.type?e[t.key]=JsonArray.convertToJSON(t.value):e[t.key]=t.value,e),{})}addNode(e,t){return this._updateArray(t,e),this._updateTree(),this}addSubNode(e,t){return"object"===this[e].type?this[e].value.addNode(0,t):(this._updateArray(t,e,!0),this._updateTree(),this)}deleteNode(e){return this.splice(e,1),this._updateTree(),this}updateNode(e,t,n){try{void 0!==t&&(this[e].key=t),void 0!==n&&(this[e].value=n)}catch(e){console.log(e)}return this._updateTree(this),this}_createNode(e,t){var n="object"==typeof t[e];const a=`${this.path}[${this.length}]`;return{key:e,level:(a.match(/value/g)||[]).length,type:typeof t[e],path:a,value:n?new JsonArray(t[e],a+".value",this._updateTree):t[e]}}_updateArray(t,n,a){Object.keys(t).forEach(e=>{e=this._createNode(e,t);a?(this[n].type="object",this[n].value=new JsonArray(t,this[n].path+".value",this._updateTree)):n?this.splice(n,0,e):this.push(e)})}}function __rest(e,t){var n={};for(r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]]);return n}const Tree=e=>{var a=e["data"],r=__rest(e,["data"]);return React.createElement("div",{className:"group"},a.map((e,t)=>{var n="object"===e.type;return React.createElement("div",{key:e.path,className:"child node-row"},React.createElement("div",{className:"row-items"},React.createElement("span",{className:"checkbox",style:{transform:`translate(-${32*e.level+32}px, 2px)`}},React.createElement("input",{type:"checkbox"})),React.createElement("span",{className:"plus",onClick:e=>{a.addSubNode(t,{key:"value"})}},"âž•"),React.createElement("input",{value:e.key,onChange:e=>{a.updateNode(t,e.target.value)}}),React.createElement("input",{value:n?"Object":e.value,disabled:n,onChange:e=>{a.updateNode(t,void 0,e.target.value)}}),React.createElement("span",{onClick:()=>a.deleteNode(t)},"ðŸ—‘")),n&&React.createElement(Tree,Object.assign({data:e.value},r)))}))};function styleInject(e,t){var n,a,t=(t=void 0===t?{}:t).insertAt;e&&"undefined"!=typeof document&&(n=document.head||document.getElementsByTagName("head")[0],(a=document.createElement("style")).type="text/css","top"===t&&n.firstChild?n.insertBefore(a,n.firstChild):n.appendChild(a),a.styleSheet?a.styleSheet.cssText=e:a.appendChild(document.createTextNode(e)))}var css_248z='.react-json-tree.has-selection {\n  padding-left: 40px;\n}\n.react-json-tree .checkbox {\n  position: absolute;\n}\n.react-json-tree .plus {\n  border: 1px solid;\n  width: 28px;\n  line-height: 30px !important;\n}\n.react-json-tree .plus + input {\n  margin-right: 16px !important;\n}\n.react-json-tree .group:last-child {\n  border-left: 0;\n}\n.react-json-tree .group .group {\n  margin: 0 16px;\n  position: relative;\n}\n.react-json-tree .group .group .child {\n  margin: 8px 0;\n  padding-left: 16px;\n  position: relative;\n}\n.react-json-tree .group .group .child::before {\n  content: "";\n  position: absolute;\n  display: block;\n  height: calc(100% + 16px);\n  top: 0px;\n  left: 0;\n  width: 1px;\n  background-color: #000;\n}\n.react-json-tree .group .group .child:after {\n  position: absolute;\n  display: block;\n  content: "";\n  width: 16px;\n  height: 1px;\n  background-color: #000;\n  top: 16px;\n  left: 0;\n}\n.react-json-tree .group .group .child:last-child:before {\n  height: 16px;\n}\n.react-json-tree .group span {\n  cursor: pointer;\n  margin: 0 8px;\n  display: inline-grid;\n  height: 28px;\n  place-items: center;\n  line-height: 28px;\n}\n.react-json-tree .group input {\n  height: 24px;\n  margin: 0;\n  font-size: 16px;\n  padding: 0 4px;\n}';styleInject(css_248z);class JsonEditor extends React.Component{constructor(e){super(e),this.jsonTree=new JsonArray(e.data,"",this.setState.bind(this)),this.state={value:[]}}componentDidUpdate(e,t){var n;this.state!==t&&null!=(n=(t=this.props).onChange)&&n.call(t,this.state.value)}render(){return React.createElement("div",{className:"react-json-tree "+(this.props.hasSelection?"has-selection":"")},React.createElement(Tree,{data:this.jsonTree}))}}export{JsonEditor};
//# sourceMappingURL=index.es.js.map
