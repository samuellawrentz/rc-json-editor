"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var React=require("react");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var React__default=_interopDefaultLegacy(React);class JsonArray extends Array{constructor(e,t="",a){super(),"object"==typeof e&&(this.path=t,this._updateTree=()=>a({value:this}),this._updateArray(e))}static convertToJSON(e){return e.reduce((e,t)=>("object"===t.type?e[t.key]=JsonArray.convertToJSON(t.value):e[t.key]=t.value,e),{})}addNode(e,t){return this._updateArray(t,e),this._updateTree(),this}addSubNode(e,t){return"object"===this[e].type?this[e].value.addNode(0,t):(this._updateArray(t,e,!0),this._updateTree(),this)}deleteNode(e){return this.splice(e,1),this._updateTree(),this}updateNode(e,t,a){try{void 0!==t&&(this[e].key=t),void 0!==a&&(this[e].value=a)}catch(e){console.log(e)}return this._updateTree(this),this}_createNode(e,t){var a="object"==typeof t[e];const n=`${this.path}[${this.length}]`;return{key:e,level:(n.match(/value/g)||[]).length,type:typeof t[e],path:n,value:a?new JsonArray(t[e],n+".value",this._updateTree):t[e]}}_updateArray(t,a,n){Object.keys(t).forEach(e=>{e=this._createNode(e,t);n?(this[a].type="object",this[a].value=new JsonArray(t,this[a].path+".value",this._updateTree)):a?this.splice(a,0,e):this.push(e)})}}function __rest(e,t){var a={};for(r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,r=Object.getOwnPropertySymbols(e);n<r.length;n++)t.indexOf(r[n])<0&&Object.prototype.propertyIsEnumerable.call(e,r[n])&&(a[r[n]]=e[r[n]]);return a}const Tree=e=>{var n=e["data"],r=__rest(e,["data"]);return React__default.default.createElement("div",{className:"group"},n.map((e,t)=>{var a="object"===e.type;return React__default.default.createElement("div",{key:e.path,className:"child node-row"},React__default.default.createElement("div",{className:"row-items"},React__default.default.createElement("span",{className:"checkbox",style:{transform:`translate(-${32*e.level+32}px, 2px)`}},React__default.default.createElement("input",{type:"checkbox"})),React__default.default.createElement("span",{className:"plus",onClick:e=>{n.addSubNode(t,{key:"value"})}},"âž•"),React__default.default.createElement("input",{value:e.key,onChange:e=>{n.updateNode(t,e.target.value)}}),React__default.default.createElement("input",{value:a?"Object":e.value,disabled:a,onChange:e=>{n.updateNode(t,void 0,e.target.value)}}),React__default.default.createElement("span",{onClick:()=>n.deleteNode(t)},"ðŸ—‘")),a&&React__default.default.createElement(Tree,Object.assign({data:e.value},r)))}))};function styleInject(e,t){var a,n,t=(t=void 0===t?{}:t).insertAt;e&&"undefined"!=typeof document&&(a=document.head||document.getElementsByTagName("head")[0],(n=document.createElement("style")).type="text/css","top"===t&&a.firstChild?a.insertBefore(n,a.firstChild):a.appendChild(n),n.styleSheet?n.styleSheet.cssText=e:n.appendChild(document.createTextNode(e)))}var css_248z='.react-json-tree.has-selection {\n  padding-left: 40px;\n}\n.react-json-tree .checkbox {\n  position: absolute;\n}\n.react-json-tree .plus {\n  border: 1px solid;\n  width: 28px;\n  line-height: 30px !important;\n}\n.react-json-tree .plus + input {\n  margin-right: 16px !important;\n}\n.react-json-tree .group:last-child {\n  border-left: 0;\n}\n.react-json-tree .group .group {\n  margin: 0 16px;\n  position: relative;\n}\n.react-json-tree .group .group .child {\n  margin: 8px 0;\n  padding-left: 16px;\n  position: relative;\n}\n.react-json-tree .group .group .child::before {\n  content: "";\n  position: absolute;\n  display: block;\n  height: calc(100% + 16px);\n  top: 0px;\n  left: 0;\n  width: 1px;\n  background-color: #000;\n}\n.react-json-tree .group .group .child:after {\n  position: absolute;\n  display: block;\n  content: "";\n  width: 16px;\n  height: 1px;\n  background-color: #000;\n  top: 16px;\n  left: 0;\n}\n.react-json-tree .group .group .child:last-child:before {\n  height: 16px;\n}\n.react-json-tree .group span {\n  cursor: pointer;\n  margin: 0 8px;\n  display: inline-grid;\n  height: 28px;\n  place-items: center;\n  line-height: 28px;\n}\n.react-json-tree .group input {\n  height: 24px;\n  margin: 0;\n  font-size: 16px;\n  padding: 0 4px;\n}';styleInject(css_248z);class JsonEditor extends React__default.default.Component{constructor(e){super(e),this.jsonTree=new JsonArray(e.data,"",this.setState.bind(this)),this.state={value:[]}}componentDidUpdate(e,t){var a;this.state!==t&&null!=(a=(t=this.props).onChange)&&a.call(t,this.state.value)}render(){return React__default.default.createElement("div",{className:"react-json-tree "+(this.props.hasSelection?"has-selection":"")},React__default.default.createElement(Tree,{data:this.jsonTree}))}}exports.JsonEditor=JsonEditor;
//# sourceMappingURL=index.js.map
